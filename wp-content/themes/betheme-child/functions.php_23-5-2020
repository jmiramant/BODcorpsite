<?php

/* ---------------------------------------------------------------------------
 * Child Theme URI | DO NOT CHANGE
 * --------------------------------------------------------------------------- */
define( 'CHILD_THEME_URI', get_stylesheet_directory_uri() );


/* ---------------------------------------------------------------------------
 * Define | YOU CAN CHANGE THESE
 * --------------------------------------------------------------------------- */

// White Label --------------------------------------------
define( 'WHITE_LABEL', false );

// Static CSS is placed in Child Theme directory ----------
define( 'STATIC_IN_CHILD', false );


/* ---------------------------------------------------------------------------
 * Enqueue Style
 * --------------------------------------------------------------------------- */
add_action( 'wp_enqueue_scripts', 'mfnch_enqueue_styles', 101 );
function mfnch_enqueue_styles() {

	// Enqueue the parent stylesheet
// 	wp_enqueue_style( 'parent-style', get_template_directory_uri() .'/style.css' );		//we don't need this if it's empty

	// Enqueue the parent rtl stylesheet
	if ( is_rtl() ) {
		wp_enqueue_style( 'mfn-rtl', get_template_directory_uri() . '/rtl.css' );
	}

	// Enqueue the child stylesheet
	wp_dequeue_style( 'style' );
	wp_enqueue_style( 'style', get_stylesheet_directory_uri() .'/style.css' );
	/*if( is_page( array( 'landing' ) ) ){
		wp_enqueue_script( 'script-name', 'https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js', array(), '', false );
		wp_enqueue_style( 'script-name-css', 'https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css', array(), '', false );
	}
	wp_enqueue_script( 'frontend-ajax', JS_DIR_URI . 'frontend-ajax.js', array('jquery'), null, true );
	wp_localize_script( 'frontend-ajax', 'frontend_ajax_object',
        array(
            'ajaxurl' => admin_url( 'admin-ajax.php' ),
        )
    );*/
    // wp_register_script( 'my_loadmore', get_stylesheet_directory_uri() . '/js/myloadmore.js', array('jquery') );
    // wp_localize_script( 'my_loadmore', 'misha_loadmore_params', array(
    //     'ajaxurl' => site_url() . '/wp-admin/admin-ajax.php', // WordPress AJAX
    //     'posts' => json_encode( $wp_query->query_vars ), // everything about your loop is here
    //     'current_page' => get_query_var( 'paged' ) ? get_query_var('paged') : 1,
    //     'max_page' => $wp_query->max_num_pages
    // ) );
    // wp_enqueue_script( 'my_loadmore' );
}


/* ---------------------------------------------------------------------------
 * Load Textdomain
 * --------------------------------------------------------------------------- */
add_action( 'after_setup_theme', 'mfnch_textdomain' );
function mfnch_textdomain() {
    load_child_theme_textdomain( 'betheme',  get_stylesheet_directory() . '/languages' );
    load_child_theme_textdomain( 'mfn-opts', get_stylesheet_directory() . '/languages' );
}

/* ---------------------------------------------------------------------------
 * Enable wordpress to accept webp format images
 * --------------------------------------------------------------------------- */
function webp_upload_mimes( $existing_mimes ) {
    // add webp to the list of mime types
    $existing_mimes['webp'] = 'image/webp';
    $existing_mimes['jp2'] = 'image/jp2';

    // return the array back to the function with our added mime type
    return $existing_mimes;
}
add_filter( 'mime_types', 'webp_upload_mimes' );

/**
 * Register Widget Sidebar.
 */
function landing_page_widgets_init() {

    register_sidebar( array(
        'name' => __( 'Lnading Page Footer 1', 'wpb' ),
        'id' => 'landing-page-footer-1',
        'description' => __( 'Talent Acquisition Footer 1 page template', 'wpb' ),
        'before_widget' => '<aside id="%1$s" class="widget %2$s">',
        'after_widget' => '</aside>',
        'before_title' => '<h3 class="widget-title">',
        'after_title' => '</h3>',
    ) );

    register_sidebar( array(
        'name' => __( 'Lnading Page Footer 2', 'wpb' ),
        'id' => 'landing-page-footer-2',
        'description' => __( 'Talent Acquisition Footer 2 page template', 'wpb' ),
        'before_widget' => '<aside id="%1$s" class="widget %2$s">',
        'after_widget' => '</aside>',
        'before_title' => '<h3 class="widget-title">',
        'after_title' => '</h3>',
    ) );

    register_sidebar( array(
        'name' => __( 'Blog Sidebar', 'wpb' ),
        'id' => 'blog-sidebar',
        'description' => __( 'Appears on the Blog page', 'wpb' ),
        'before_widget' => '<aside id="%1$s" class="widget %2$s">',
        'after_widget' => '</aside>',
        'before_title' => '<h3 class="widget-title">',
        'after_title' => '</h3>',
    ) );
    }

add_action( 'widgets_init', 'landing_page_widgets_init' );

# Automatically clear autoptimizeCache if it goes beyond 256MB
if (class_exists('autoptimizeCache')) {
    $myMaxSize = 512000; # You may change this value to lower like 100000 for 100MB if you have limited server space
    $statArr=autoptimizeCache::stats();
    $cacheSize=round($statArr[1]/1024);
    if ($cacheSize>$myMaxSize){
       autoptimizeCache::clearall();
       header("Refresh:0"); # Refresh the page so that autoptimize can create new cache files and it does breaks the page after clearall.
    }
}

function new_excerpt_more( $more ) {
    return '';
}
add_filter('excerpt_more', 'new_excerpt_more');


function footer_content( $atts, $content = "" ) {
    return get_footer();
}
add_shortcode( 'footer', 'footer_content' );

//
//function my_scripts() {
//if( is_page( array( 'landing' ) ) ){
//wp_enqueue_script( 'script-name', 'https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js', array(), '1.0.0', false );
//}
//}
//add_action( 'wp_enqueue_scripts', 'my_scripts' );

/*
add_action( 'wp_ajax_listing_companions_ajax', 'listing_companions_ajax' );
add_action( 'wp_ajax_nopriv_listing_companions_ajax', 'listing_companions_ajax' );

function listing_companions_ajax() {
	if((isset($_POST['name']))&&(isset($_POST['email'])&&$_POST['email']!="")){
		//print_r($_POST);
		$to = 'maan.6050@gmail.com';
		$subject = 'Form Submitted Successfully!';
		$message = '<html><head><title>Call me back</title></head><body><p><b>Name:</b> '.$_POST['name'].'</p><p><b>Phone:</b> '.$_POST['phone'].'</p>
				</body></html>';
		$headers  = "Content-type: text/html; charset=utf-8 \r\n";
		$headers .= "From: Site <balwindermony@gmail.com>\r\n";
		if(wp_mail($to, $subject, $message, $headers)){
			print_r($_POST);
		}
		echo "test";
		//echo json_encode(array('status' => 'success'));
	}else{
		//echo json_encode(array('status' => 'failure'));
	}
	//echo json_decode($_POST);

	//echo json_decode();
 //echo json_encode(array('name'=>'rrrrrr'));
}*/
function pagination_bar( $custom_query ) {

    $total_pages = $custom_query->max_num_pages;
    $big = 999999999; // need an unlikely integer

    if ($total_pages > 1){
        $current_page = max(1, get_query_var('paged'));

        echo paginate_links(array(
            'base' => str_replace( $big, '%#%', esc_url( get_pagenum_link( $big ) ) ),
            'format' => '?paged=%#%',
            'current' => $current_page,
            'total' => $total_pages,
        ));
    }
}

function limit_words($string, $word_limit) {

    // creates an array of words from $string (this will be our excerpt)
    // explode divides the excerpt up by using a space character

    $words = explode(' ', $string);

    // this next bit chops the $words array and sticks it back together
    // starting at the first word '0' and ending at the $word_limit
    // the $word_limit which is passed in the function will be the number
    // of words we want to use
    // implode glues the chopped up array back together using a space character

    return implode(' ', array_slice($words, 0, $word_limit));

}

add_action('save_post', 'assign_parent_terms', 10, 2);

function assign_parent_terms($post_id, $post){

    if($post->post_type != 'post')
        return $post_id;

    // get all assigned terms
    $terms = wp_get_post_terms($post_id, 'category' );
    foreach($terms as $term){
        while($term->parent != 0 && !has_term( $term->parent, 'category', $post )){
            // move upward until we get to 0 level terms
            wp_set_post_terms($post_id, array($term->parent), 'category', true);
            $term = get_term($term->parent, 'category');
        }
    }
}

add_action('save_post', 'assign_parent_terms_for_CPT_casestudy', 10, 2);

function assign_parent_terms_for_CPT_casestudy($post_id, $post){

    if($post->post_type != 'casestudy')
        return $post_id;

    // get all assigned terms
    $terms = wp_get_post_terms($post_id, 'casestudy_category' );
    foreach($terms as $term){
        while($term->parent != 0 && !has_term( $term->parent, 'casestudy_category', $post )){
            // move upward until we get to 0 level terms
            wp_set_post_terms($post_id, array($term->parent), 'casestudy_category', true);
            $term = get_term($term->parent, 'casestudy_category');
        }
    }
}

function misha_loadmore_ajax_handler(){

    // prepare our arguments for the query

    $args = array (
                    //'cat' => $category->cat_ID,
                    'order'   => 'ASC',
                    'posts_per_page'   => '3',
                    'category__in' => array(22),
                  );
    $args['paged'] = $_POST['page'] + 1; // we need next page to be loaded
    $args['post_status'] = 'publish';

    // it is always better to use WP_Query but not here
    query_posts( $args );

    if( have_posts() ) :

        // run the loop
        while( have_posts() ): the_post();
            $category_detail=get_the_category($post->ID);
            $url = wp_get_attachment_url( get_post_thumbnail_id() );
            foreach($category_detail as $cd){
                    $slug = $cd->slug;
                    $name = $cd->name;
            }
            // look into your theme code how the posts are inserted, but you can use your own HTML of course
            // do you remember? - my example is adapted for Twenty Seventeen theme
            //get_template_part( 'template-parts/post/content', get_post_format() ); ?>
           <div class="filter-item filter <?php echo $slug; ?>" id="lod">
                        <a href="<?php the_permalink();  ?>"><div class="caseStudyInner"><img src="<?php echo $url;  ?>" class="filter-image">
                        <div class="filterItem"><h3><span><?php the_title(); ?></span></h3><h4><?php echo $name; ?></h4><p>See our full stack data science in action. Until you've experienced deep integration, you haven't felt the difference of the Blue Orange way. </p></div></div></a>
                    </div>  <?php
            // for the test purposes comment the line above and uncomment the below one
            // the_title();


        endwhile;

    endif;
    die; // here we exit the script and even no wp_reset_query() required!
}
add_action('wp_ajax_loadmore', 'misha_loadmore_ajax_handler'); // wp_ajax_{action}
add_action('wp_ajax_nopriv_loadmore', 'misha_loadmore_ajax_handler'); // wp_ajax_nopriv_{action}

//CPT for CASE Study
// Our custom post type function
function create_caseStudy_posttype() {

    register_post_type( 'casestudy',
    // CPT Options
        array(
            'labels' => array(
                'name' => __( 'Casestudy' ),
                'singular_name' => __( 'Casestudy' )
            ),
            'public' => true,
            'has_archive' => true,
            'rewrite' => array('slug' => 'casestudy'),
            'show_in_rest' => true,
            'supports' => array( 'title','editor','author','thumbnail' ),
            'taxonomies' => array('casestudy_category','casestudy_tag'),

        )
    );
    // create a new taxonomy
    register_taxonomy(
        'casestudy_category',
        'casestudy',
        array(
            'label' => __( 'Casestudy Categories' ),
            'rewrite' => array( 'slug' => 'casestudy_categories' ),
            'hierarchical' => true,
            'show_in_rest' => true,
            'capabilities' => array(
                'edit_terms' => 'manage_categories'
            ),
            'show_admin_column' => true
        )
    );

        $labels = array(
            'name' => _x( 'Casestudy Tags', 'taxonomy general name' ),
            'singular_name' => _x( 'Casestudy Tag', 'taxonomy singular name' ),
            'search_items' =>  __( 'Search Tags' ),
            'popular_items' => __( 'Popular Tags' ),
            'all_items' => __( 'All Tags' ),
            'parent_item' => null,
            'parent_item_colon' => null,
            'edit_item' => __( 'Edit Tag' ),
            'update_item' => __( 'Update Tag' ),
            'add_new_item' => __( 'Add New Tag' ),
            'new_item_name' => __( 'New Tag Name' ),
            'separate_items_with_commas' => __( 'Separate tags with commas' ),
            'add_or_remove_items' => __( 'Add or remove tags' ),
            'choose_from_most_used' => __( 'Choose from the most used tags' ),
            'menu_name' => __( 'Casestudy Tags' ),
          );

   register_taxonomy('casestudy_tag','casestudy',array(
    'hierarchical' => false,
    'labels' => $labels,
    'show_ui' => true,
    'update_count_callback' => '_update_post_term_count',
    'query_var' => true,
    'show_in_rest' => true,
    'rewrite' => array( 'slug' => 'casestudy_tags' ),
    'show_admin_column' => true
  ));
}
// Hooking up our function to theme setup
add_action( 'init', 'create_caseStudy_posttype' );


add_shortcode( 'casestudy_post_list', 'casestudy_post_list' );
function casestudy_post_list( $atts ) {
	ob_start();
	?>
	<div class="blog-left">
		<?php
		$case_terms = get_terms('casestudy_category');
		$paged = ( get_query_var( 'paged' ) ) ? get_query_var( 'paged' ) : 1;
		$term_ids = [];
		foreach($case_terms as $case_term){
			wp_reset_query();
				 $term_ids[] = $case_term->term_id;
		}
				$case_args = array('post_type' => 'casestudy',
					'paged' => $paged,
							'tax_query' => array(
									array(
											'taxonomy' => 'casestudy_category',
											'field' => 'term_id',
											'terms' => $term_ids,
									),
							),
					 );
				$loop = new WP_Query($case_args);
			if ( $loop-> have_posts() ) :
				while ( $loop->have_posts() ) : $loop->the_post();
					$url = wp_get_attachment_url( get_post_thumbnail_id(get_the_ID()) );
		?>
		<div class="main-article">
			<div class="article-inner">
				<a class="postImg" style="background-image: url(<?php echo isset($url) ? $url : '';  ?>); " href="<?php the_permalink();  ?>"></a>
				<div class="article-content">
					<?php
						$case_terms = get_the_terms( get_the_ID(), 'casestudy_category' );
						foreach($case_terms as $case_term){
							if($case_term->parent != 0){
						?>
						<p class="category">
						<?php
							echo $case_term->name;
						?>
						</p>
						<?php
							}
						}
					?>
					<a href="<?php the_permalink();  ?>"><h3><?php the_title();  ?></h3>
					<p><?php
					echo wp_trim_words( get_the_content(get_the_ID()), 20, '...' );
					?></p></a>
				<hr class="border-bottom"> </hr>
				</div>
			</div>
		</div>
		<?php
				endwhile;
			endif;
		?><nav class="pagination">
						<?php pagination_bar( $loop ); ?>
		</nav>
	</div>
	<?php
	return ob_get_clean();
}



add_shortcode( 'casestudy_recent_post_list', 'casestudy_recent_post_list' );
function casestudy_recent_post_list( $atts ) {
		ob_start();
	?>
	<div class="detail-recent-post Case clearfix">
				<div class="main-title"> <h3> Recent Blogs </h3> </div>
				<div class="recent-row">
				<?php
					$args = array( 'post_type'=> 'casestudy','numberposts' => '3','post_status' => 'publish' );
					$recent_posts = wp_get_recent_posts($args);
					foreach( $recent_posts as $recent ){
						$post_url = get_permalink($recent["ID"]);
						$categories = get_the_category( $recent["ID"] );
						$img_url = wp_get_attachment_url( get_post_thumbnail_id($recent["ID"]) );
				?>

				<div class="detail-recent-box">
				<div class="detail-recent-box-inner">
					<a class="postImg" style="background-image: url(<?php echo isset($img_url) ? $img_url : '';  ?>);" href="<?php echo $post_url;  ?>"></a>
					<div class="article-content detail-card-content">
						<?php
							$category_detail = get_the_category($recent["ID"]);
							foreach($category_detail as $cd){
								if($cd->parent != 0){
									$rec_cat_name = $cd->name;
								}
							}
							if($rec_cat_name){
						?>
							<p class="category">
							 <?php
								echo $rec_cat_name;
							?>
							</p>
						<?php
							}
						?>
					 <a href="<?php echo $post_url;  ?>"><h3> <?php echo $recent['post_title']; ?> </h3>
					  <p><?php
						echo wp_trim_words( $recent['post_content'], 20, '...' );
						?></p></a>
					</div>
				</div>
				</div>
				<?php }  ?>
			</div>
	</div>
	<?php
	return ob_get_clean();
}

// Shortcode for Blog list Walker_Page::end_el
add_shortcode( 'blog_post_list', 'blog_post_list' );
function blog_post_list( $atts ) {
		ob_start();
		?>
		<section class="full-wrapper-section main-blog-page clearfix">
			<div class="blog-left">
				<?php
				$blog_cats = get_categories();
				$paged = ( get_query_var( 'paged' ) ) ? get_query_var( 'paged' ) : 1;
				$term_ids = [];
				foreach($blog_cats as $blog_cat){
						wp_reset_query();
							$term_ids[] = $blog_cat->term_id;
				}
							$blog_args = array('post_type' => 'post',
								'paged' => $paged,
						        'tax_query' => array(
						            array(
						                'taxonomy' => 'category',
						                'field' => 'term_id',
						                'terms' => $term_ids,
						            ),
						        ),
						     );
						$loop = new WP_Query($blog_args);

					if ( $loop-> have_posts() ) :
						while ( $loop->have_posts() ) : $loop->the_post();
							$url = wp_get_attachment_url( get_post_thumbnail_id() );
				?>
				<div class="main-article">
					<div class="article-inner">
					<a class="postImg" style="background-image: url(<?php echo isset($url) ? $url : '';  ?>); " href="<?php the_permalink();  ?>"></a>
						<div class="article-content">
							<?php
								$blog_terms = get_the_category();
								foreach($blog_terms as $blog_term){
									if($blog_term->category_parent != 0){
							?>
							<p class="category">
							<?php
								echo $blog_term->name;
							?>
							</p>
							<?php
									}
								}
							?>
							<a href="<?php the_permalink();  ?>"><h3><?php the_title();  ?></h3>
							<p><?php
							echo wp_trim_words( get_the_content(), 20, '...' );
							?></p></a>
						<hr class="border-bottom"> </hr>
						</div>
					</div>
				</div>
				<?php
							endwhile;
						endif; ?>
			<nav class="pagination">
		        <?php pagination_bar( $loop ); ?>
		    </nav>
			</div>

		</section>
		<?php
return ob_get_clean();
}


add_shortcode( 'blog_recent_post_list', 'blog_recent_post_list' );
function blog_recent_post_list( $atts ) {
		ob_start();
	?>
	<div class="detail-recent-post Case clearfix">
		<div class="main-title"> <h3> Case Studies </h3> </div>
		<div class="recent-row">
				<?php
				$args = array( 'post_type'=> 'casestudy','numberposts' => '3','post_status' => 'publish' );
				$recent_posts = wp_get_recent_posts($args);
					foreach( $recent_posts as $recent ){
						$post_url = get_permalink($recent["ID"]);
						$img_url = wp_get_attachment_url( get_post_thumbnail_id($recent["ID"]) );
				?>
				<div class="detail-recent-box">
				<div class="detail-recent-box-inner">
					<a class="postImg" style="background-image: url(<?php echo isset($img_url) ? $img_url : '';  ?>);" href="<?php echo $post_url;  ?>"></a>
					<div class="article-content detail-card-content tst">
						<?php
							$category_detail = get_the_terms($recent["ID"],'casestudy_category');
							foreach($category_detail as $cd){
								if($cd->parent != 0){
									$rec_cat_name = $cd->name;
								}
							}
							if($rec_cat_name){
						?>
						<p class="category">
						<?php
							echo $rec_cat_name;
						?>
						</p>
						<?php
							}
						?>
					  <a href="<?php echo $post_url;  ?>"><h3> <?php echo $recent['post_title']; ?> </h3>
					  <p><?php
						echo wp_trim_words(  $recent['post_content'], 15, '...' );
						?></p></a>
					</div>
				</div>
				</div>
				<?php }  ?>
			</div>
	</div>
	<?php
return ob_get_clean();
}




//After submission open pdf file for get in touch form

add_action( 'wp_footer', 'redirect_cf7' );

function redirect_cf7() {
?>
<script type="text/javascript">
document.addEventListener( 'wpcf7mailsent', function( event ) {
   if ( '2493' == event.detail.contactFormId ) { // Sends sumissions on form 947 to the first thank you page
    //location = 'https://blueorange.digital/wp-content/uploads/2020/01/2020-Guide-to-Data-Driven-Lending-1.pdf';
   // window.open('https://blueorange.digital/wp-content/uploads/2020/01/2020-Guide-to-Data-Driven-Lending-1.pdf', '_blank');
	fetch('https://blueorange.digital/wp-content/uploads/2020/01/2020-Guide-to-Data-Driven-Lending-1.pdf')
  	.then(resp => resp.blob())
  	.then(blob => {
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.style.display = 'none';
    a.href = url;
    // the filename you want
    a.download = 'https://blueorange.digital/wp-content/uploads/2020/01/2020-Guide-to-Data-Driven-Lending-1.pdf';
    document.body.appendChild(a);
    a.click();
    window.URL.revokeObjectURL(url);
  })
  .catch(() => alert('oh no!'));
    }
}, false );
</script>
<?php
}





// Include script
function our_work_script() {
	?>
	<!-- <link href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js"></script> -->
	<?php
  wp_enqueue_style( 'select2-css', get_stylesheet_directory_uri(). '/css/select2.min.css' );
  wp_enqueue_script( 'select2-script', get_stylesheet_directory_uri(). '/js/select2.min.js' );
  wp_enqueue_script( 'our-work-post-script' , get_stylesheet_directory_uri(). '/js/ajax.js' );
  wp_localize_script( 'our-work-post-script' , 'myback', array( 'ajax_url' => admin_url( 'admin-ajax.php' ) ));
}
add_action( 'wp_enqueue_scripts', 'our_work_script' );


add_action( 'wp_ajax_jsm_get_our_work_data', 'jsm_get_our_work_data' );
add_action( 'wp_ajax_nopriv_jsm_get_our_work_data', 'jsm_get_our_work_data' );

function jsm_get_our_work_data () {

    $servicesID = $_POST['servicesID'];
    $posttype = $_POST['posttype'];
    $servicesArray = [];
    $html = '';


		$workArgs = [];



		$paged = ( get_query_var( 'paged' ) ) ? get_query_var( 'paged' ) : 1;
    if($posttype == 'post'){
			$workArgs = array(
	      'post_type'      => $posttype,
	      'posts_per_page' => 9,
	      'paged'          => $paged,
	      'post_status'    => 'publish',
	      'order'          => 'DESC',
				'tag_id'         => $servicesID
	    );
		}else{
			if($servicesID != 0){
				$workArgs = array(
					'post_type'      => $posttype,
					'posts_per_page' => 9,
					'paged'          => $paged,
					'post_status'    => 'publish',
					'order'          => 'DESC',
					'tax_query' => array(
						array(
								'taxonomy' => 'casestudy_tag',
								'field'    => 'id',
								'terms'    => $servicesID
						),
					),
				);
			}else{
				$workArgs = array(
					'post_type'      => $posttype,
					'posts_per_page' => 9,
					'paged'          => $paged,
					'post_status'    => 'publish',
					'order'          => 'DESC',

				);
			}

		}

    $workloop = new WP_Query( $workArgs );
    if ( $workloop->have_posts() ) :


      while ( $workloop->have_posts() ) : $workloop->the_post();
      $project_title= get_the_title();
      $project_id = get_the_ID();
      $featured_img_url = get_the_post_thumbnail_url( get_the_ID() ,'full');


      $serviceData = [];
      $services = wp_get_object_terms( get_the_ID(), 'services', $args );
      if(!empty($services)){
        foreach ($services as $service) {
            $serviceData[] = $service->name;
        }
      }

			$html .= '<div class="main-article">
				<div class="article-inner">
				<a class="postImg" style="background-image: url('.(isset($featured_img_url) ? $featured_img_url : '').') " href="'.get_the_permalink().'"></a>
					<div class="article-content">';

							$blog_terms = get_the_category();
							foreach($blog_terms as $blog_term){
								if($blog_term->category_parent != 0){
							$html .= '<p class="category">'.$blog_term->name.'</p>';
								}
							}
							$html .= '<a href="'.get_the_permalink().'"><h3>'.get_the_title().'</h3>
						<p>'.wp_trim_words( get_the_content(), 20, '...' ).'</p></a>
					<hr class="border-bottom"> </hr>
					</div>
				</div>
			</div>';

      endwhile;
      wp_reset_query();

      $html .= '</div>
      <div class="row">
        <div class="col-md-12">
          <div class="pagination">';
            $html .= pagination_bar_my( $workloop, $servicesID, $posttype);
          $html.'</div>
        </div>
      </div><div id="our_work_loader">
        <div class="loader">
          <div id="triangle-1"></div>
        </div>
      </div>';
    else:
      $html .= '<div class="row"><div class="col-md-12 text-center mb-4"><h4>We’re sorry, but nothing matched your search. Please try again with different filters.</h4></div></div>';
    endif;


    header( 'Content-Type: application/json' );
    header( 'Status: 200' );
    echo json_encode( array( 'result' => true, 'data'=> $html, 'services' => $servicesID) );
    die();

}


add_action( 'wp_ajax_nopriv_jsm_get_our_work_pagination', 'jsm_get_our_work_pagination' );
add_action( 'wp_ajax_jsm_get_our_work_pagination', 'jsm_get_our_work_pagination' );

// Function for our work pagination ajax filter
function jsm_get_our_work_pagination($atts) {
  $posttype = $_POST['posttype'];
  $postlimit = $_POST['postlimit'];
  $pagenumber = $_POST['pagenumber'];
  $servicesID = $_POST['servicesID'];
  $html = '';
  $paged = $pagenumber;

	if($posttype == 'post'){
		$workArgs = array(
			'post_type'      => $posttype,
			'posts_per_page' => 9,
			'paged'          => $paged,
			'post_status'    => 'publish',
			'order'          => 'DESC',
			'tag_id'         => $servicesID
		);
	}else{
		if($servicesID != 0){
			$workArgs = array(
				'post_type'      => $posttype,
				'posts_per_page' => 9,
				'paged'          => $paged,
				'post_status'    => 'publish',
				'order'          => 'DESC',
				'tax_query' => array(
					array(
							'taxonomy' => 'casestudy_tag',
							'field'    => 'id',
							'terms'    => $servicesID
					),
				),
			);
		}else{
			$workArgs = array(
				'post_type'      => $posttype,
				'posts_per_page' => 9,
				'paged'          => $paged,
				'post_status'    => 'publish',
				'order'          => 'DESC',
			);
		}
	}

  $workloop = new WP_Query( $workArgs );
  if ( $workloop->have_posts() ) :

		$html .= '<div style="float: left;width:100%">';
    while ( $workloop->have_posts() ) : $workloop->the_post();
    $project_title= get_the_title();
    $project_id = get_the_ID();
    $featured_img_url = get_the_post_thumbnail_url( get_the_ID() ,'full');

		$html .= '<div class="main-article">
			<div class="article-inner">
			<a class="postImg" style="background-image: url('.(isset($featured_img_url) ? $featured_img_url : '').') " href="'.get_the_permalink().'"></a>
				<div class="article-content">';

						$blog_terms = get_the_category();
						foreach($blog_terms as $blog_term){
							if($blog_term->category_parent != 0){
						$html .= '<p class="category">'.$blog_term->name.'</p>';
							}
						}
						$html .= '<a href="'.get_the_permalink().'"><h3>'.get_the_title().'</h3>
					<p>'.wp_trim_words( get_the_content(), 20, '...' ).'</p></a>
				<hr class="border-bottom"> </hr>
				</div>
			</div>
		</div>';

    endwhile;
    wp_reset_query();

    $html .= '</div></div>
    <div class="row">
      <div class="col-md-12">
        <div class="pagination">';
          $html .= pagination_bar_my( $workloop, $servicesID,$posttype );
        $html.'</div>
      </div>';
  endif;


  header( 'Content-Type: application/json' );
  header( 'Status: 200' );
  echo json_encode( array( 'result' => true, 'data'=> $html , 'services' => $servicesID) );
  die();
}



// Function for our work pagination setup
function pagination_bar_my( $custom_query, $servicesID,$posttype ) {

  $number = isset($_POST[ 'pagenumber' ]) ? $_POST[ 'pagenumber' ] : ' 1 ';

if($posttype == 'post'){
	$cptaType   = "post";
	$args = array (
    'post_type'      => 'post',
    'posts_per_page' => -1,
    'post_status'    => 'publish',
    'order'          => 'DESC',
		'tag_id'         => $servicesID
    );
}else{
	$cptaType   = "casestudy";
	$args = array (
		'post_type'      => 'casestudy',
		'posts_per_page' => -1,
		'post_status'    => 'publish',
		'order'          => 'DESC',
		'tax_query' => array(
			array(
					'taxonomy' => 'casestudy_tag',
					'field'    => 'id',
					'terms'    => $servicesID
			),
		),
	);
}





    if($servicesID == ''){
      $servicesID = 0;
    }


    $default_posts_per_page = get_option( 'posts_per_page' );

    $cptaLimit = 9;
    $cpta_Query = new WP_Query( $args );
    $cpta_Count = count($cpta_Query->posts);
    $cpta_Paginationlist = ceil($cpta_Count/$cptaLimit);

    $last = ceil( $cpta_Paginationlist );


    if($cpta_Count > 6){

    $setPagination .="<ul class='pagination'>";


     for($cpta = max(1, $number - 6); $cpta <= min($number + 6, $last); $cpta++){

        if( $number ==  $cpta ){
          $active="active";
        } elseif( 1 ==  $cpta ){
          if( $number ==  null ){
          $active="active";
          }
        } else{
          $active="";
        }

      $setPagination .="<li class='page-item $active' ><a href='javascript:;' data-cpta='$cpta' data-cptaLimit='$cptaLimit'  data-posttype='$cptaType' data-services='$servicesID' class='page-link'>$cpta</a></li>";
      }

      $setPagination .="</ul>";
      return $setPagination;
    }
}
